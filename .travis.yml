---
services: docker

env:
#  - distro: centos7
#  - distro: centos6
#  - distro: fedora27
#  - distro: ubuntu1604
#  - distro: ubuntu1404
#  - distro: ubuntu1204

  - distro: debian9
  - distro: debian8
  - distro: ubuntu1804
  - distro: ubuntu1604

script:
  # Configure test script so we can run extra tests after playbook is run.
  - export container_id=$(date +%s)
  - export cleanup=false
  - export DOCKER="docker exec --tty ${container_id} env TERM=xterm"

  # Download test shim.
  - wget -O ${PWD}/tests/test.sh https://gist.githubusercontent.com/tschifftner/4078cf2a8429d967d5e100649ff2caa9/raw/
  - chmod +x ${PWD}/tests/test.sh

  # Run tests.
  - ${PWD}/tests/test.sh

  # Make sure elasticsearch service is running
  - ${DOCKER} service elasticsearch status | grep "running"

  # Make sure elasticsearch is installed
  - >
    ${DOCKER} curl 127.0.0.1:9200 | grep 'cluster_uuid'
    && (echo 'ElasticSearch is installed' && exit 0)
    || (echo 'ElasticSearch is not installed' && exit 1)

after_failure:
  - ls -la /var/www
  - ${DOCKER} curl 127.0.0.1:9200
  - ${DOCKER} service elasticsearch status
  - ${DOCKER} service elasticsearch start
  - ${DOCKER} service elasticsearch status
  - ${DOCKER} netstat -atnlp
  - ${DOCKER} ps aux | grep java
  - ${DOCKER} curl 127.0.0.1:9200

notifications:
  slack: ambimax:2MlPTX9bY9aPxCPhJGxHKIT6
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
